# Generated by Django 4.0.3 on 2022-03-12 16:11

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Adres Başlığı', max_length=50, verbose_name='Adres Başlığı')),
                ('city', models.CharField(choices=[('0', '---'), ('1', 'ADANA'), ('2', 'ADIYAMAN'), ('3', 'AFYONKARAHİSAR'), ('4', 'AĞRI'), ('5', 'AMASYA'), ('6', 'ANKARA'), ('7', 'ANTALYA'), ('8', 'ARTVİN'), ('9', 'AYDIN'), ('10', 'BALIKESİR'), ('11', 'BİLECİKK'), ('12', 'BİNGÖL'), ('13', 'BİTLİS'), ('14', 'BOLU'), ('15', 'BURDUR'), ('16', 'BURSA'), ('17', 'ÇANAKKALE'), ('18', 'ÇANKIRI'), ('19', 'ÇORUM'), ('20', 'DENİZLİ'), ('21', 'DİYARBAKIR'), ('22', 'EDİRNE'), ('23', 'ELAZIĞ'), ('24', 'ERZİNCAN'), ('25', 'ERZURUM'), ('26', 'ESKİŞEHİR'), ('27', 'GAZİANTEP'), ('28', 'GİRESUN'), ('29', 'GÜMÜŞHANE'), ('30', 'HAKKARİ'), ('31', 'HATAY'), ('32', 'ISPARTA'), ('33', 'MERSİN'), ('34', 'İSTANBUL'), ('35', 'İZMİR'), ('36', 'KARS'), ('37', 'KASTAMONU'), ('38', 'KAYSERİ'), ('39', 'KIRKLARELİ'), ('40', 'KIRŞEHİR'), ('41', 'KOCAELİ'), ('42', 'KONYA'), ('43', 'KÜTAHYA'), ('44', 'MALATYA'), ('45', 'MANİSA'), ('46', 'KAHRAMANMARAŞ'), ('47', 'MARDİN'), ('48', 'MUĞLA'), ('49', 'MUŞ'), ('50', 'NEVŞEHİR'), ('51', 'NİĞDE'), ('52', 'ORDU'), ('53', 'RİZE'), ('54', 'SAKARYA'), ('55', 'SAMSUN'), ('56', 'SİİRT'), ('57', 'SİNOP'), ('58', 'SİVAS'), ('59', 'TEKİRDAĞ'), ('60', 'TOKAT'), ('61', 'TRABZON'), ('62', 'TUNCELİ'), ('63', 'ŞANLIURFA'), ('64', 'UŞAK'), ('65', 'VAN'), ('66', 'YOZGAT'), ('67', 'ZONGULDAK'), ('68', 'AKSARAY'), ('69', 'BAYBURT'), ('70', 'KARAMAN'), ('71', 'KIRIKKALE'), ('72', 'BATMAN'), ('73', 'ŞIRNAK'), ('74', 'BARTIN'), ('75', 'ARDAHAN'), ('76', 'IĞDIR'), ('77', 'YALOVA'), ('78', 'KARABüK'), ('79', 'KİLİS'), ('80', 'OSMANİYE'), ('81', 'DÜZCE')], max_length=20)),
                ('street', models.CharField(help_text='Sokak', max_length=150, verbose_name='Sokak')),
                ('address', models.TextField(help_text='Açık Adres', max_length=500, verbose_name='Açık Adres')),
            ],
        ),
        migrations.CreateModel(
            name='ModelUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, help_text='Profil Fotoğrafı', null=True, upload_to='Users', verbose_name='Profil Fotoğrafı')),
                ('address', models.ManyToManyField(blank=True, help_text='Adresler', to='UserApp.modeladdress', verbose_name='Adresler')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
